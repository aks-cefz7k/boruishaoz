version: "3.7"
services:

  # 数据库服务
  postgresql:
    image: 'kiss-registry:5000/mdillon/postgis:10'
    deploy:
      replicas: 1
      restart_policy:
        condition: none
      placement:
        constraints:
          - node.hostname == mesos104
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    ports:
      - '55432:5432'
    networks:
      - kiss-net-17
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password

  # redis服务
  redis:
    image: 'docker-registry:5000/redis/redis:3.2-alpine'
    deploy:
      replicas: 1
      restart_policy:
        condition: none
    ports:
      - '6389:6379'
    networks:
      - kiss-net-17
    command: redis-server /etc/redis/redis.conf

  # 配置软件服务（可选）
  configserver:
    image: 'docker-registry:5000/configserver:latest'
    ports:
      - '8012:8012'
    volumes:
      - /root/dist:/dist
    networks:
      - kiss-net-17
    deploy:
      replicas: 1
      restart_policy:
        condition: none
      placement:
        constraints:
          - node.hostname == mesos103

  # OpenATC平台服务
  openatc:
    image: 'docker-registry:5000/openatc/admin:latest'
    ports:
      - mode: host
        protocol: tcp
        published: 10003
        target: 10003

      - '31003:31003/udp'
      - '31002:31002/udp'
      - '5005:5005'
    volumes:
      - /root/static:/static
      - /root/token:/token
    networks:
      - kiss-net-17
    deploy:
      replicas: 1
      restart_policy:
        condition: none
      placement:
        constraints:
          - node.hostname == mesos103
    environment:
      - ppostgresql=192.168.13.103
      - ppostgresport=55432
      - pgusername=postgres
      - pgpassword=password
      - predis=192.168.13.103
      - predisport=6389
      - predispassword=
      - logginglevel=info
      - shiro=true

  # OpenATC数据采集服务
  collector:
    image: 'docker-registry:5000/openatc/collector:latest'
    ports:
      - '10004:10004'
    networks:
      - kiss-net-17
    deploy:
      replicas: 1
      restart_policy:
        condition: none
    environment:
      - predis=192.168.13.103
      - predisport=6389
      - predispassword=
      - influxenable=true
      - influxurl=http://192.168.13.103:8086
      - influxdatabase=openatc

  # 时序数据库
  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    deploy:
      replicas: 1
      restart_policy:
        condition: none
      placement:
        constraints:
          - node.hostname == mesos104
    environment:
      - PRE_CREATE_DB=openatc
    ports:
      # The API for InfluxDB is served on port 8086
      - "8086:8086"
      - "8082:8082"
      # UDP Port
      - "8089:8089/udp"
    volumes:
      - /data/influxdb/conf/:/etc/influxdb/
      - /data/influxdb/:/root/.influxdb/

  # 状态采集器
  cadvisor:
    image: google/cadvisor
    ports:
      - "18080:8080"
    hostname: '{{.Node.Hostname}}'
    command: -logtostderr -docker_only -storage_driver=influxdb -storage_driver_db=cadvisor -storage_driver_host=influxdb:8086
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - influxdb
    deploy:
      mode: global


  # 监控可视化
  grafana:
    image: grafana:latest
    container_name: grafana
    deploy:
      replicas: 1
      restart_policy:
        condition: none
      placement:
        constraints:
          - node.hostname == mesos104
    ports:
      - "3000:3000"
    volumes:
      - /data/grafana/data:/var/lib/grafana

volumes:
  postgresql-data:

networks:
  kiss-net-17:
    external: true
